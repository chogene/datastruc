cards = [13, 11, 10, 7, 4, 3, 1, 0]
query = 7
output = 3
tests = []

def locate_card(cards, query):
    position = 0

    while position < len(cards):
        if cards[position] == query:
            return position
        position += 1

        if position == len(cards):
            return -1
    return -1


test = {
    'input': {
        'cards': [13, 11, 10, 7, 4, 3, 1, 0],
        'query': 7
    },
    'output': 3
}

# result = locate_card(cards, query)
# (result == output)
# locate_card(**test['input']) == test['output']

tests.append(test)

# query occurs in the middle
tests.append({
    'input': {
        'cards': [13, 11, 10, 7, 4, 3, 1, 0],
        'query': 1
    },
    'output': 6
})

# query is the first element
tests.append({
    'input': {
        'cards': [4, 2, 1, -1],
        'query': 4
    },
    'output': 0
})

# query is the last element
tests.append({
    'input': {
        'cards': [3, -1, -9, -127],
        'query': -127
    },
    'output': 3
})

# query contains one element, query
tests.append({
    'input': {
        'cards': [6],
        'query': 6
    },
    'output': 0
})

# cards does not contain query
tests.append({
    'input': {
        'cards': [9, 7, 5, 2, -9],
        'query': 4
    },
    'output': -1
})

# cards is empty
tests.append({
    'input': {
        'cards': [],
        'query': 7
    },
    'output': -1
})

# numbers can repeat in cards
tests.append({
    'input': {
        'cards': [8, 8, 6, 6, 6, 6, 6, 3, 2, 2, 2, 0, 0, 0],
        'query': 3
    },
    'output': 7
})

# query occurs multiple times
tests.append({
    'input': {
        'cards': [8, 8, 6, 6, 6, 6, 6, 6, 3, 2, 2, 2, 0, 0, 0],
        'query': 6
    },
    'output': 2
})

# print(tests[6]) syntax to call specifically
result = locate_card(tests[7]['input']['cards'], tests[7]['input']['query'])
# IndexError: list index out of range (w/ while True: -> change to while position <len(cards))
print(result == tests[7]['output'])

